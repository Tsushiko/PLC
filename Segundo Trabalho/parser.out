Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> Corpo
Rule 2     Programa -> Glob
Rule 3     Programa -> Glob Corpo
Rule 4     Glob -> Decl
Rule 5     Glob -> Glob Decl
Rule 6     Decl -> INT NOME
Rule 7     Decl -> INT NOME ATR NUMERO
Rule 8     Decl -> INT NOME ATR NOME
Rule 9     Decl -> Fundecl DEFINE NOME Programa RETURN NOME )
Rule 10    Decl -> Fundecl DEFINE NOME Programa RETURN NUMERO )
Rule 11    Decl -> Fundecl DEFINE NOME RETURN NUMERO )
Rule 12    Fundecl -> NOME ( ) (
Rule 13    Corpo -> Ope
Rule 14    Corpo -> Corpo Ope
Rule 15    Ope -> Atrib
Rule 16    Ope -> Escrever
Rule 17    Ope -> Se
Rule 18    Ope -> Enquanto
Rule 19    Ope -> PRINT ( Frase )
Rule 20    Frase -> NOME
Rule 21    Frase -> Frase NOME
Rule 22    Se -> SE Cond ENTAO Corpo FIM
Rule 23    Se -> SE Cond ENTAO Corpo SENAO Corpo FIM
Rule 24    Enquanto -> ENQUANTO Cond FAZ Corpo FIM
Rule 25    Atrib -> NOME ATR Expr
Rule 26    Atrib -> NOME ATR LER
Rule 27    Escrever -> ESCREVER Expr
Rule 28    Expr -> ( Expr )
Rule 29    Expr -> NOME ( )
Rule 30    Expr -> Var
Rule 31    Expr -> NUMERO
Rule 32    Expr -> + ( Expr VIRG Expr )
Rule 33    Expr -> - ( Expr VIRG Expr )
Rule 34    Expr -> * ( Expr VIRG Expr )
Rule 35    Expr -> / ( Expr VIRG Expr )
Rule 36    Expr -> % ( Expr VIRG Expr )
Rule 37    Expr -> Cond
Rule 38    Cond -> ( Cond )
Rule 39    Cond -> MAIOR ( Expr VIRG Expr )
Rule 40    Cond -> MENOR ( Expr VIRG Expr )
Rule 41    Cond -> MAIORI ( Expr VIRG Expr )
Rule 42    Cond -> MENORI ( Expr VIRG Expr )
Rule 43    Cond -> IGUAL ( Expr VIRG Expr )
Rule 44    Cond -> NIGUAL ( Expr VIRG Expr )
Rule 45    Cond -> E ( Cond VIRG Cond )
Rule 46    Cond -> OU ( Cond VIRG Cond )
Rule 47    Cond -> NEG ( Cond )
Rule 48    Var -> NOME

Terminals, with rules where they appear

%                    : 36
(                    : 12 12 19 28 29 32 33 34 35 36 38 39 40 41 42 43 44 45 46 47
)                    : 9 10 11 12 19 28 29 32 33 34 35 36 38 39 40 41 42 43 44 45 46 47
*                    : 34
+                    : 32
-                    : 33
/                    : 35
ATR                  : 7 8 25 26
DEFINE               : 9 10 11
E                    : 45
ENQUANTO             : 24
ENTAO                : 22 23
ESCREVER             : 27
FAZ                  : 24
FIM                  : 22 23 24
IGUAL                : 43
INT                  : 6 7 8
LER                  : 26
MAIOR                : 39
MAIORI               : 41
MENOR                : 40
MENORI               : 42
NEG                  : 47
NIGUAL               : 44
NOME                 : 6 7 8 8 9 9 10 11 12 20 21 25 26 29 48
NUMERO               : 7 10 11 31
OU                   : 46
PRINT                : 19
RETURN               : 9 10 11
SE                   : 22 23
SENAO                : 23
VIRG                 : 32 33 34 35 36 39 40 41 42 43 44 45 46
error                : 

Nonterminals, with rules where they appear

Atrib                : 15
Cond                 : 22 23 24 37 38 45 45 46 46 47
Corpo                : 1 3 14 22 23 23 24
Decl                 : 4 5
Enquanto             : 18
Escrever             : 16
Expr                 : 25 27 28 32 32 33 33 34 34 35 35 36 36 39 39 40 40 41 41 42 42 43 43 44 44
Frase                : 19 21
Fundecl              : 9 10 11
Glob                 : 2 3 5
Ope                  : 13 14
Programa             : 9 10 0
Se                   : 17
Var                  : 30

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . Corpo
    (2) Programa -> . Glob
    (3) Programa -> . Glob Corpo
    (13) Corpo -> . Ope
    (14) Corpo -> . Corpo Ope
    (4) Glob -> . Decl
    (5) Glob -> . Glob Decl
    (15) Ope -> . Atrib
    (16) Ope -> . Escrever
    (17) Ope -> . Se
    (18) Ope -> . Enquanto
    (19) Ope -> . PRINT ( Frase )
    (6) Decl -> . INT NOME
    (7) Decl -> . INT NOME ATR NUMERO
    (8) Decl -> . INT NOME ATR NOME
    (9) Decl -> . Fundecl DEFINE NOME Programa RETURN NOME )
    (10) Decl -> . Fundecl DEFINE NOME Programa RETURN NUMERO )
    (11) Decl -> . Fundecl DEFINE NOME RETURN NUMERO )
    (25) Atrib -> . NOME ATR Expr
    (26) Atrib -> . NOME ATR LER
    (27) Escrever -> . ESCREVER Expr
    (22) Se -> . SE Cond ENTAO Corpo FIM
    (23) Se -> . SE Cond ENTAO Corpo SENAO Corpo FIM
    (24) Enquanto -> . ENQUANTO Cond FAZ Corpo FIM
    (12) Fundecl -> . NOME ( ) (

    PRINT           shift and go to state 10
    INT             shift and go to state 11
    NOME            shift and go to state 12
    ESCREVER        shift and go to state 14
    SE              shift and go to state 15
    ENQUANTO        shift and go to state 16

    Programa                       shift and go to state 1
    Corpo                          shift and go to state 2
    Glob                           shift and go to state 3
    Ope                            shift and go to state 4
    Decl                           shift and go to state 5
    Atrib                          shift and go to state 6
    Escrever                       shift and go to state 7
    Se                             shift and go to state 8
    Enquanto                       shift and go to state 9
    Fundecl                        shift and go to state 13

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> Corpo .
    (14) Corpo -> Corpo . Ope
    (15) Ope -> . Atrib
    (16) Ope -> . Escrever
    (17) Ope -> . Se
    (18) Ope -> . Enquanto
    (19) Ope -> . PRINT ( Frase )
    (25) Atrib -> . NOME ATR Expr
    (26) Atrib -> . NOME ATR LER
    (27) Escrever -> . ESCREVER Expr
    (22) Se -> . SE Cond ENTAO Corpo FIM
    (23) Se -> . SE Cond ENTAO Corpo SENAO Corpo FIM
    (24) Enquanto -> . ENQUANTO Cond FAZ Corpo FIM

    $end            reduce using rule 1 (Programa -> Corpo .)
    RETURN          reduce using rule 1 (Programa -> Corpo .)
    PRINT           shift and go to state 10
    NOME            shift and go to state 18
    ESCREVER        shift and go to state 14
    SE              shift and go to state 15
    ENQUANTO        shift and go to state 16

    Ope                            shift and go to state 17
    Atrib                          shift and go to state 6
    Escrever                       shift and go to state 7
    Se                             shift and go to state 8
    Enquanto                       shift and go to state 9

state 3

    (2) Programa -> Glob .
    (3) Programa -> Glob . Corpo
    (5) Glob -> Glob . Decl
    (13) Corpo -> . Ope
    (14) Corpo -> . Corpo Ope
    (6) Decl -> . INT NOME
    (7) Decl -> . INT NOME ATR NUMERO
    (8) Decl -> . INT NOME ATR NOME
    (9) Decl -> . Fundecl DEFINE NOME Programa RETURN NOME )
    (10) Decl -> . Fundecl DEFINE NOME Programa RETURN NUMERO )
    (11) Decl -> . Fundecl DEFINE NOME RETURN NUMERO )
    (15) Ope -> . Atrib
    (16) Ope -> . Escrever
    (17) Ope -> . Se
    (18) Ope -> . Enquanto
    (19) Ope -> . PRINT ( Frase )
    (12) Fundecl -> . NOME ( ) (
    (25) Atrib -> . NOME ATR Expr
    (26) Atrib -> . NOME ATR LER
    (27) Escrever -> . ESCREVER Expr
    (22) Se -> . SE Cond ENTAO Corpo FIM
    (23) Se -> . SE Cond ENTAO Corpo SENAO Corpo FIM
    (24) Enquanto -> . ENQUANTO Cond FAZ Corpo FIM

    $end            reduce using rule 2 (Programa -> Glob .)
    RETURN          reduce using rule 2 (Programa -> Glob .)
    INT             shift and go to state 11
    PRINT           shift and go to state 10
    NOME            shift and go to state 21
    ESCREVER        shift and go to state 14
    SE              shift and go to state 15
    ENQUANTO        shift and go to state 16

    Corpo                          shift and go to state 19
    Decl                           shift and go to state 20
    Ope                            shift and go to state 4
    Fundecl                        shift and go to state 13
    Atrib                          shift and go to state 6
    Escrever                       shift and go to state 7
    Se                             shift and go to state 8
    Enquanto                       shift and go to state 9

state 4

    (13) Corpo -> Ope .

    PRINT           reduce using rule 13 (Corpo -> Ope .)
    NOME            reduce using rule 13 (Corpo -> Ope .)
    ESCREVER        reduce using rule 13 (Corpo -> Ope .)
    SE              reduce using rule 13 (Corpo -> Ope .)
    ENQUANTO        reduce using rule 13 (Corpo -> Ope .)
    $end            reduce using rule 13 (Corpo -> Ope .)
    RETURN          reduce using rule 13 (Corpo -> Ope .)
    FIM             reduce using rule 13 (Corpo -> Ope .)
    SENAO           reduce using rule 13 (Corpo -> Ope .)


state 5

    (4) Glob -> Decl .

    INT             reduce using rule 4 (Glob -> Decl .)
    PRINT           reduce using rule 4 (Glob -> Decl .)
    NOME            reduce using rule 4 (Glob -> Decl .)
    ESCREVER        reduce using rule 4 (Glob -> Decl .)
    SE              reduce using rule 4 (Glob -> Decl .)
    ENQUANTO        reduce using rule 4 (Glob -> Decl .)
    $end            reduce using rule 4 (Glob -> Decl .)
    RETURN          reduce using rule 4 (Glob -> Decl .)


state 6

    (15) Ope -> Atrib .

    PRINT           reduce using rule 15 (Ope -> Atrib .)
    NOME            reduce using rule 15 (Ope -> Atrib .)
    ESCREVER        reduce using rule 15 (Ope -> Atrib .)
    SE              reduce using rule 15 (Ope -> Atrib .)
    ENQUANTO        reduce using rule 15 (Ope -> Atrib .)
    $end            reduce using rule 15 (Ope -> Atrib .)
    RETURN          reduce using rule 15 (Ope -> Atrib .)
    FIM             reduce using rule 15 (Ope -> Atrib .)
    SENAO           reduce using rule 15 (Ope -> Atrib .)


state 7

    (16) Ope -> Escrever .

    PRINT           reduce using rule 16 (Ope -> Escrever .)
    NOME            reduce using rule 16 (Ope -> Escrever .)
    ESCREVER        reduce using rule 16 (Ope -> Escrever .)
    SE              reduce using rule 16 (Ope -> Escrever .)
    ENQUANTO        reduce using rule 16 (Ope -> Escrever .)
    $end            reduce using rule 16 (Ope -> Escrever .)
    RETURN          reduce using rule 16 (Ope -> Escrever .)
    FIM             reduce using rule 16 (Ope -> Escrever .)
    SENAO           reduce using rule 16 (Ope -> Escrever .)


state 8

    (17) Ope -> Se .

    PRINT           reduce using rule 17 (Ope -> Se .)
    NOME            reduce using rule 17 (Ope -> Se .)
    ESCREVER        reduce using rule 17 (Ope -> Se .)
    SE              reduce using rule 17 (Ope -> Se .)
    ENQUANTO        reduce using rule 17 (Ope -> Se .)
    $end            reduce using rule 17 (Ope -> Se .)
    RETURN          reduce using rule 17 (Ope -> Se .)
    FIM             reduce using rule 17 (Ope -> Se .)
    SENAO           reduce using rule 17 (Ope -> Se .)


state 9

    (18) Ope -> Enquanto .

    PRINT           reduce using rule 18 (Ope -> Enquanto .)
    NOME            reduce using rule 18 (Ope -> Enquanto .)
    ESCREVER        reduce using rule 18 (Ope -> Enquanto .)
    SE              reduce using rule 18 (Ope -> Enquanto .)
    ENQUANTO        reduce using rule 18 (Ope -> Enquanto .)
    $end            reduce using rule 18 (Ope -> Enquanto .)
    RETURN          reduce using rule 18 (Ope -> Enquanto .)
    FIM             reduce using rule 18 (Ope -> Enquanto .)
    SENAO           reduce using rule 18 (Ope -> Enquanto .)


state 10

    (19) Ope -> PRINT . ( Frase )

    (               shift and go to state 22


state 11

    (6) Decl -> INT . NOME
    (7) Decl -> INT . NOME ATR NUMERO
    (8) Decl -> INT . NOME ATR NOME

    NOME            shift and go to state 23


state 12

    (25) Atrib -> NOME . ATR Expr
    (26) Atrib -> NOME . ATR LER
    (12) Fundecl -> NOME . ( ) (

    ATR             shift and go to state 24
    (               shift and go to state 25


state 13

    (9) Decl -> Fundecl . DEFINE NOME Programa RETURN NOME )
    (10) Decl -> Fundecl . DEFINE NOME Programa RETURN NUMERO )
    (11) Decl -> Fundecl . DEFINE NOME RETURN NUMERO )

    DEFINE          shift and go to state 26


state 14

    (27) Escrever -> ESCREVER . Expr
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 27
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 15

    (22) Se -> SE . Cond ENTAO Corpo FIM
    (23) Se -> SE . Cond ENTAO Corpo SENAO Corpo FIM
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 48
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Cond                           shift and go to state 47

state 16

    (24) Enquanto -> ENQUANTO . Cond FAZ Corpo FIM
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 48
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Cond                           shift and go to state 49

state 17

    (14) Corpo -> Corpo Ope .

    PRINT           reduce using rule 14 (Corpo -> Corpo Ope .)
    NOME            reduce using rule 14 (Corpo -> Corpo Ope .)
    ESCREVER        reduce using rule 14 (Corpo -> Corpo Ope .)
    SE              reduce using rule 14 (Corpo -> Corpo Ope .)
    ENQUANTO        reduce using rule 14 (Corpo -> Corpo Ope .)
    $end            reduce using rule 14 (Corpo -> Corpo Ope .)
    RETURN          reduce using rule 14 (Corpo -> Corpo Ope .)
    FIM             reduce using rule 14 (Corpo -> Corpo Ope .)
    SENAO           reduce using rule 14 (Corpo -> Corpo Ope .)


state 18

    (25) Atrib -> NOME . ATR Expr
    (26) Atrib -> NOME . ATR LER

    ATR             shift and go to state 24


state 19

    (3) Programa -> Glob Corpo .
    (14) Corpo -> Corpo . Ope
    (15) Ope -> . Atrib
    (16) Ope -> . Escrever
    (17) Ope -> . Se
    (18) Ope -> . Enquanto
    (19) Ope -> . PRINT ( Frase )
    (25) Atrib -> . NOME ATR Expr
    (26) Atrib -> . NOME ATR LER
    (27) Escrever -> . ESCREVER Expr
    (22) Se -> . SE Cond ENTAO Corpo FIM
    (23) Se -> . SE Cond ENTAO Corpo SENAO Corpo FIM
    (24) Enquanto -> . ENQUANTO Cond FAZ Corpo FIM

    $end            reduce using rule 3 (Programa -> Glob Corpo .)
    RETURN          reduce using rule 3 (Programa -> Glob Corpo .)
    PRINT           shift and go to state 10
    NOME            shift and go to state 18
    ESCREVER        shift and go to state 14
    SE              shift and go to state 15
    ENQUANTO        shift and go to state 16

    Ope                            shift and go to state 17
    Atrib                          shift and go to state 6
    Escrever                       shift and go to state 7
    Se                             shift and go to state 8
    Enquanto                       shift and go to state 9

state 20

    (5) Glob -> Glob Decl .

    INT             reduce using rule 5 (Glob -> Glob Decl .)
    PRINT           reduce using rule 5 (Glob -> Glob Decl .)
    NOME            reduce using rule 5 (Glob -> Glob Decl .)
    ESCREVER        reduce using rule 5 (Glob -> Glob Decl .)
    SE              reduce using rule 5 (Glob -> Glob Decl .)
    ENQUANTO        reduce using rule 5 (Glob -> Glob Decl .)
    $end            reduce using rule 5 (Glob -> Glob Decl .)
    RETURN          reduce using rule 5 (Glob -> Glob Decl .)


state 21

    (12) Fundecl -> NOME . ( ) (
    (25) Atrib -> NOME . ATR Expr
    (26) Atrib -> NOME . ATR LER

    (               shift and go to state 25
    ATR             shift and go to state 24


state 22

    (19) Ope -> PRINT ( . Frase )
    (20) Frase -> . NOME
    (21) Frase -> . Frase NOME

    NOME            shift and go to state 51

    Frase                          shift and go to state 50

state 23

    (6) Decl -> INT NOME .
    (7) Decl -> INT NOME . ATR NUMERO
    (8) Decl -> INT NOME . ATR NOME

    INT             reduce using rule 6 (Decl -> INT NOME .)
    PRINT           reduce using rule 6 (Decl -> INT NOME .)
    NOME            reduce using rule 6 (Decl -> INT NOME .)
    ESCREVER        reduce using rule 6 (Decl -> INT NOME .)
    SE              reduce using rule 6 (Decl -> INT NOME .)
    ENQUANTO        reduce using rule 6 (Decl -> INT NOME .)
    $end            reduce using rule 6 (Decl -> INT NOME .)
    RETURN          reduce using rule 6 (Decl -> INT NOME .)
    ATR             shift and go to state 52


state 24

    (25) Atrib -> NOME ATR . Expr
    (26) Atrib -> NOME ATR . LER
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    LER             shift and go to state 54
    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 53
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 25

    (12) Fundecl -> NOME ( . ) (

    )               shift and go to state 55


state 26

    (9) Decl -> Fundecl DEFINE . NOME Programa RETURN NOME )
    (10) Decl -> Fundecl DEFINE . NOME Programa RETURN NUMERO )
    (11) Decl -> Fundecl DEFINE . NOME RETURN NUMERO )

    NOME            shift and go to state 56


state 27

    (27) Escrever -> ESCREVER Expr .

    PRINT           reduce using rule 27 (Escrever -> ESCREVER Expr .)
    NOME            reduce using rule 27 (Escrever -> ESCREVER Expr .)
    ESCREVER        reduce using rule 27 (Escrever -> ESCREVER Expr .)
    SE              reduce using rule 27 (Escrever -> ESCREVER Expr .)
    ENQUANTO        reduce using rule 27 (Escrever -> ESCREVER Expr .)
    $end            reduce using rule 27 (Escrever -> ESCREVER Expr .)
    RETURN          reduce using rule 27 (Escrever -> ESCREVER Expr .)
    FIM             reduce using rule 27 (Escrever -> ESCREVER Expr .)
    SENAO           reduce using rule 27 (Escrever -> ESCREVER Expr .)


state 28

    (28) Expr -> ( . Expr )
    (38) Cond -> ( . Cond )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )
    (48) Var -> . NOME

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 57
    Cond                           shift and go to state 58
    Var                            shift and go to state 30

state 29

    (29) Expr -> NOME . ( )
    (48) Var -> NOME .

    (               shift and go to state 59
    PRINT           reduce using rule 48 (Var -> NOME .)
    NOME            reduce using rule 48 (Var -> NOME .)
    ESCREVER        reduce using rule 48 (Var -> NOME .)
    SE              reduce using rule 48 (Var -> NOME .)
    ENQUANTO        reduce using rule 48 (Var -> NOME .)
    $end            reduce using rule 48 (Var -> NOME .)
    RETURN          reduce using rule 48 (Var -> NOME .)
    FIM             reduce using rule 48 (Var -> NOME .)
    SENAO           reduce using rule 48 (Var -> NOME .)
    )               reduce using rule 48 (Var -> NOME .)
    VIRG            reduce using rule 48 (Var -> NOME .)


state 30

    (30) Expr -> Var .

    PRINT           reduce using rule 30 (Expr -> Var .)
    NOME            reduce using rule 30 (Expr -> Var .)
    ESCREVER        reduce using rule 30 (Expr -> Var .)
    SE              reduce using rule 30 (Expr -> Var .)
    ENQUANTO        reduce using rule 30 (Expr -> Var .)
    $end            reduce using rule 30 (Expr -> Var .)
    RETURN          reduce using rule 30 (Expr -> Var .)
    FIM             reduce using rule 30 (Expr -> Var .)
    SENAO           reduce using rule 30 (Expr -> Var .)
    )               reduce using rule 30 (Expr -> Var .)
    VIRG            reduce using rule 30 (Expr -> Var .)


state 31

    (31) Expr -> NUMERO .

    PRINT           reduce using rule 31 (Expr -> NUMERO .)
    NOME            reduce using rule 31 (Expr -> NUMERO .)
    ESCREVER        reduce using rule 31 (Expr -> NUMERO .)
    SE              reduce using rule 31 (Expr -> NUMERO .)
    ENQUANTO        reduce using rule 31 (Expr -> NUMERO .)
    $end            reduce using rule 31 (Expr -> NUMERO .)
    RETURN          reduce using rule 31 (Expr -> NUMERO .)
    FIM             reduce using rule 31 (Expr -> NUMERO .)
    SENAO           reduce using rule 31 (Expr -> NUMERO .)
    )               reduce using rule 31 (Expr -> NUMERO .)
    VIRG            reduce using rule 31 (Expr -> NUMERO .)


state 32

    (32) Expr -> + . ( Expr VIRG Expr )

    (               shift and go to state 60


state 33

    (33) Expr -> - . ( Expr VIRG Expr )

    (               shift and go to state 61


state 34

    (34) Expr -> * . ( Expr VIRG Expr )

    (               shift and go to state 62


state 35

    (35) Expr -> / . ( Expr VIRG Expr )

    (               shift and go to state 63


state 36

    (36) Expr -> % . ( Expr VIRG Expr )

    (               shift and go to state 64


state 37

    (37) Expr -> Cond .

    PRINT           reduce using rule 37 (Expr -> Cond .)
    NOME            reduce using rule 37 (Expr -> Cond .)
    ESCREVER        reduce using rule 37 (Expr -> Cond .)
    SE              reduce using rule 37 (Expr -> Cond .)
    ENQUANTO        reduce using rule 37 (Expr -> Cond .)
    $end            reduce using rule 37 (Expr -> Cond .)
    RETURN          reduce using rule 37 (Expr -> Cond .)
    FIM             reduce using rule 37 (Expr -> Cond .)
    SENAO           reduce using rule 37 (Expr -> Cond .)
    VIRG            reduce using rule 37 (Expr -> Cond .)
    )               reduce using rule 37 (Expr -> Cond .)


state 38

    (39) Cond -> MAIOR . ( Expr VIRG Expr )

    (               shift and go to state 65


state 39

    (40) Cond -> MENOR . ( Expr VIRG Expr )

    (               shift and go to state 66


state 40

    (41) Cond -> MAIORI . ( Expr VIRG Expr )

    (               shift and go to state 67


state 41

    (42) Cond -> MENORI . ( Expr VIRG Expr )

    (               shift and go to state 68


state 42

    (43) Cond -> IGUAL . ( Expr VIRG Expr )

    (               shift and go to state 69


state 43

    (44) Cond -> NIGUAL . ( Expr VIRG Expr )

    (               shift and go to state 70


state 44

    (45) Cond -> E . ( Cond VIRG Cond )

    (               shift and go to state 71


state 45

    (46) Cond -> OU . ( Cond VIRG Cond )

    (               shift and go to state 72


state 46

    (47) Cond -> NEG . ( Cond )

    (               shift and go to state 73


state 47

    (22) Se -> SE Cond . ENTAO Corpo FIM
    (23) Se -> SE Cond . ENTAO Corpo SENAO Corpo FIM

    ENTAO           shift and go to state 74


state 48

    (38) Cond -> ( . Cond )
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 48
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Cond                           shift and go to state 75

state 49

    (24) Enquanto -> ENQUANTO Cond . FAZ Corpo FIM

    FAZ             shift and go to state 76


state 50

    (19) Ope -> PRINT ( Frase . )
    (21) Frase -> Frase . NOME

    )               shift and go to state 77
    NOME            shift and go to state 78


state 51

    (20) Frase -> NOME .

    )               reduce using rule 20 (Frase -> NOME .)
    NOME            reduce using rule 20 (Frase -> NOME .)


state 52

    (7) Decl -> INT NOME ATR . NUMERO
    (8) Decl -> INT NOME ATR . NOME

    NUMERO          shift and go to state 80
    NOME            shift and go to state 79


state 53

    (25) Atrib -> NOME ATR Expr .

    PRINT           reduce using rule 25 (Atrib -> NOME ATR Expr .)
    NOME            reduce using rule 25 (Atrib -> NOME ATR Expr .)
    ESCREVER        reduce using rule 25 (Atrib -> NOME ATR Expr .)
    SE              reduce using rule 25 (Atrib -> NOME ATR Expr .)
    ENQUANTO        reduce using rule 25 (Atrib -> NOME ATR Expr .)
    $end            reduce using rule 25 (Atrib -> NOME ATR Expr .)
    RETURN          reduce using rule 25 (Atrib -> NOME ATR Expr .)
    FIM             reduce using rule 25 (Atrib -> NOME ATR Expr .)
    SENAO           reduce using rule 25 (Atrib -> NOME ATR Expr .)


state 54

    (26) Atrib -> NOME ATR LER .

    PRINT           reduce using rule 26 (Atrib -> NOME ATR LER .)
    NOME            reduce using rule 26 (Atrib -> NOME ATR LER .)
    ESCREVER        reduce using rule 26 (Atrib -> NOME ATR LER .)
    SE              reduce using rule 26 (Atrib -> NOME ATR LER .)
    ENQUANTO        reduce using rule 26 (Atrib -> NOME ATR LER .)
    $end            reduce using rule 26 (Atrib -> NOME ATR LER .)
    RETURN          reduce using rule 26 (Atrib -> NOME ATR LER .)
    FIM             reduce using rule 26 (Atrib -> NOME ATR LER .)
    SENAO           reduce using rule 26 (Atrib -> NOME ATR LER .)


state 55

    (12) Fundecl -> NOME ( ) . (

    (               shift and go to state 81


state 56

    (9) Decl -> Fundecl DEFINE NOME . Programa RETURN NOME )
    (10) Decl -> Fundecl DEFINE NOME . Programa RETURN NUMERO )
    (11) Decl -> Fundecl DEFINE NOME . RETURN NUMERO )
    (1) Programa -> . Corpo
    (2) Programa -> . Glob
    (3) Programa -> . Glob Corpo
    (13) Corpo -> . Ope
    (14) Corpo -> . Corpo Ope
    (4) Glob -> . Decl
    (5) Glob -> . Glob Decl
    (15) Ope -> . Atrib
    (16) Ope -> . Escrever
    (17) Ope -> . Se
    (18) Ope -> . Enquanto
    (19) Ope -> . PRINT ( Frase )
    (6) Decl -> . INT NOME
    (7) Decl -> . INT NOME ATR NUMERO
    (8) Decl -> . INT NOME ATR NOME
    (9) Decl -> . Fundecl DEFINE NOME Programa RETURN NOME )
    (10) Decl -> . Fundecl DEFINE NOME Programa RETURN NUMERO )
    (11) Decl -> . Fundecl DEFINE NOME RETURN NUMERO )
    (25) Atrib -> . NOME ATR Expr
    (26) Atrib -> . NOME ATR LER
    (27) Escrever -> . ESCREVER Expr
    (22) Se -> . SE Cond ENTAO Corpo FIM
    (23) Se -> . SE Cond ENTAO Corpo SENAO Corpo FIM
    (24) Enquanto -> . ENQUANTO Cond FAZ Corpo FIM
    (12) Fundecl -> . NOME ( ) (

    RETURN          shift and go to state 83
    PRINT           shift and go to state 10
    INT             shift and go to state 11
    NOME            shift and go to state 12
    ESCREVER        shift and go to state 14
    SE              shift and go to state 15
    ENQUANTO        shift and go to state 16

    Fundecl                        shift and go to state 13
    Programa                       shift and go to state 82
    Corpo                          shift and go to state 2
    Glob                           shift and go to state 3
    Ope                            shift and go to state 4
    Decl                           shift and go to state 5
    Atrib                          shift and go to state 6
    Escrever                       shift and go to state 7
    Se                             shift and go to state 8
    Enquanto                       shift and go to state 9

state 57

    (28) Expr -> ( Expr . )

    )               shift and go to state 84


state 58

    (38) Cond -> ( Cond . )
    (37) Expr -> Cond .

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 85

  ! )               [ reduce using rule 37 (Expr -> Cond .) ]


state 59

    (29) Expr -> NOME ( . )

    )               shift and go to state 86


state 60

    (32) Expr -> + ( . Expr VIRG Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 87
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 61

    (33) Expr -> - ( . Expr VIRG Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 88
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 62

    (34) Expr -> * ( . Expr VIRG Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 89
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 63

    (35) Expr -> / ( . Expr VIRG Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 90
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 64

    (36) Expr -> % ( . Expr VIRG Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 91
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 65

    (39) Cond -> MAIOR ( . Expr VIRG Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 92
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 66

    (40) Cond -> MENOR ( . Expr VIRG Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 93
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 67

    (41) Cond -> MAIORI ( . Expr VIRG Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 94
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 68

    (42) Cond -> MENORI ( . Expr VIRG Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 95
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 69

    (43) Cond -> IGUAL ( . Expr VIRG Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 96
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 70

    (44) Cond -> NIGUAL ( . Expr VIRG Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 97
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 71

    (45) Cond -> E ( . Cond VIRG Cond )
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 48
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Cond                           shift and go to state 98

state 72

    (46) Cond -> OU ( . Cond VIRG Cond )
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 48
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Cond                           shift and go to state 99

state 73

    (47) Cond -> NEG ( . Cond )
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 48
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Cond                           shift and go to state 100

state 74

    (22) Se -> SE Cond ENTAO . Corpo FIM
    (23) Se -> SE Cond ENTAO . Corpo SENAO Corpo FIM
    (13) Corpo -> . Ope
    (14) Corpo -> . Corpo Ope
    (15) Ope -> . Atrib
    (16) Ope -> . Escrever
    (17) Ope -> . Se
    (18) Ope -> . Enquanto
    (19) Ope -> . PRINT ( Frase )
    (25) Atrib -> . NOME ATR Expr
    (26) Atrib -> . NOME ATR LER
    (27) Escrever -> . ESCREVER Expr
    (22) Se -> . SE Cond ENTAO Corpo FIM
    (23) Se -> . SE Cond ENTAO Corpo SENAO Corpo FIM
    (24) Enquanto -> . ENQUANTO Cond FAZ Corpo FIM

    PRINT           shift and go to state 10
    NOME            shift and go to state 18
    ESCREVER        shift and go to state 14
    SE              shift and go to state 15
    ENQUANTO        shift and go to state 16

    Corpo                          shift and go to state 101
    Ope                            shift and go to state 4
    Atrib                          shift and go to state 6
    Escrever                       shift and go to state 7
    Se                             shift and go to state 8
    Enquanto                       shift and go to state 9

state 75

    (38) Cond -> ( Cond . )

    )               shift and go to state 85


state 76

    (24) Enquanto -> ENQUANTO Cond FAZ . Corpo FIM
    (13) Corpo -> . Ope
    (14) Corpo -> . Corpo Ope
    (15) Ope -> . Atrib
    (16) Ope -> . Escrever
    (17) Ope -> . Se
    (18) Ope -> . Enquanto
    (19) Ope -> . PRINT ( Frase )
    (25) Atrib -> . NOME ATR Expr
    (26) Atrib -> . NOME ATR LER
    (27) Escrever -> . ESCREVER Expr
    (22) Se -> . SE Cond ENTAO Corpo FIM
    (23) Se -> . SE Cond ENTAO Corpo SENAO Corpo FIM
    (24) Enquanto -> . ENQUANTO Cond FAZ Corpo FIM

    PRINT           shift and go to state 10
    NOME            shift and go to state 18
    ESCREVER        shift and go to state 14
    SE              shift and go to state 15
    ENQUANTO        shift and go to state 16

    Corpo                          shift and go to state 102
    Ope                            shift and go to state 4
    Atrib                          shift and go to state 6
    Escrever                       shift and go to state 7
    Se                             shift and go to state 8
    Enquanto                       shift and go to state 9

state 77

    (19) Ope -> PRINT ( Frase ) .

    PRINT           reduce using rule 19 (Ope -> PRINT ( Frase ) .)
    NOME            reduce using rule 19 (Ope -> PRINT ( Frase ) .)
    ESCREVER        reduce using rule 19 (Ope -> PRINT ( Frase ) .)
    SE              reduce using rule 19 (Ope -> PRINT ( Frase ) .)
    ENQUANTO        reduce using rule 19 (Ope -> PRINT ( Frase ) .)
    $end            reduce using rule 19 (Ope -> PRINT ( Frase ) .)
    RETURN          reduce using rule 19 (Ope -> PRINT ( Frase ) .)
    FIM             reduce using rule 19 (Ope -> PRINT ( Frase ) .)
    SENAO           reduce using rule 19 (Ope -> PRINT ( Frase ) .)


state 78

    (21) Frase -> Frase NOME .

    )               reduce using rule 21 (Frase -> Frase NOME .)
    NOME            reduce using rule 21 (Frase -> Frase NOME .)


state 79

    (8) Decl -> INT NOME ATR NOME .

    INT             reduce using rule 8 (Decl -> INT NOME ATR NOME .)
    PRINT           reduce using rule 8 (Decl -> INT NOME ATR NOME .)
    NOME            reduce using rule 8 (Decl -> INT NOME ATR NOME .)
    ESCREVER        reduce using rule 8 (Decl -> INT NOME ATR NOME .)
    SE              reduce using rule 8 (Decl -> INT NOME ATR NOME .)
    ENQUANTO        reduce using rule 8 (Decl -> INT NOME ATR NOME .)
    $end            reduce using rule 8 (Decl -> INT NOME ATR NOME .)
    RETURN          reduce using rule 8 (Decl -> INT NOME ATR NOME .)


state 80

    (7) Decl -> INT NOME ATR NUMERO .

    INT             reduce using rule 7 (Decl -> INT NOME ATR NUMERO .)
    PRINT           reduce using rule 7 (Decl -> INT NOME ATR NUMERO .)
    NOME            reduce using rule 7 (Decl -> INT NOME ATR NUMERO .)
    ESCREVER        reduce using rule 7 (Decl -> INT NOME ATR NUMERO .)
    SE              reduce using rule 7 (Decl -> INT NOME ATR NUMERO .)
    ENQUANTO        reduce using rule 7 (Decl -> INT NOME ATR NUMERO .)
    $end            reduce using rule 7 (Decl -> INT NOME ATR NUMERO .)
    RETURN          reduce using rule 7 (Decl -> INT NOME ATR NUMERO .)


state 81

    (12) Fundecl -> NOME ( ) ( .

    DEFINE          reduce using rule 12 (Fundecl -> NOME ( ) ( .)


state 82

    (9) Decl -> Fundecl DEFINE NOME Programa . RETURN NOME )
    (10) Decl -> Fundecl DEFINE NOME Programa . RETURN NUMERO )

    RETURN          shift and go to state 103


state 83

    (11) Decl -> Fundecl DEFINE NOME RETURN . NUMERO )

    NUMERO          shift and go to state 104


state 84

    (28) Expr -> ( Expr ) .

    PRINT           reduce using rule 28 (Expr -> ( Expr ) .)
    NOME            reduce using rule 28 (Expr -> ( Expr ) .)
    ESCREVER        reduce using rule 28 (Expr -> ( Expr ) .)
    SE              reduce using rule 28 (Expr -> ( Expr ) .)
    ENQUANTO        reduce using rule 28 (Expr -> ( Expr ) .)
    $end            reduce using rule 28 (Expr -> ( Expr ) .)
    RETURN          reduce using rule 28 (Expr -> ( Expr ) .)
    FIM             reduce using rule 28 (Expr -> ( Expr ) .)
    SENAO           reduce using rule 28 (Expr -> ( Expr ) .)
    )               reduce using rule 28 (Expr -> ( Expr ) .)
    VIRG            reduce using rule 28 (Expr -> ( Expr ) .)


state 85

    (38) Cond -> ( Cond ) .

    PRINT           reduce using rule 38 (Cond -> ( Cond ) .)
    NOME            reduce using rule 38 (Cond -> ( Cond ) .)
    ESCREVER        reduce using rule 38 (Cond -> ( Cond ) .)
    SE              reduce using rule 38 (Cond -> ( Cond ) .)
    ENQUANTO        reduce using rule 38 (Cond -> ( Cond ) .)
    $end            reduce using rule 38 (Cond -> ( Cond ) .)
    RETURN          reduce using rule 38 (Cond -> ( Cond ) .)
    FIM             reduce using rule 38 (Cond -> ( Cond ) .)
    SENAO           reduce using rule 38 (Cond -> ( Cond ) .)
    ENTAO           reduce using rule 38 (Cond -> ( Cond ) .)
    FAZ             reduce using rule 38 (Cond -> ( Cond ) .)
    )               reduce using rule 38 (Cond -> ( Cond ) .)
    VIRG            reduce using rule 38 (Cond -> ( Cond ) .)


state 86

    (29) Expr -> NOME ( ) .

    PRINT           reduce using rule 29 (Expr -> NOME ( ) .)
    NOME            reduce using rule 29 (Expr -> NOME ( ) .)
    ESCREVER        reduce using rule 29 (Expr -> NOME ( ) .)
    SE              reduce using rule 29 (Expr -> NOME ( ) .)
    ENQUANTO        reduce using rule 29 (Expr -> NOME ( ) .)
    $end            reduce using rule 29 (Expr -> NOME ( ) .)
    RETURN          reduce using rule 29 (Expr -> NOME ( ) .)
    FIM             reduce using rule 29 (Expr -> NOME ( ) .)
    SENAO           reduce using rule 29 (Expr -> NOME ( ) .)
    )               reduce using rule 29 (Expr -> NOME ( ) .)
    VIRG            reduce using rule 29 (Expr -> NOME ( ) .)


state 87

    (32) Expr -> + ( Expr . VIRG Expr )

    VIRG            shift and go to state 105


state 88

    (33) Expr -> - ( Expr . VIRG Expr )

    VIRG            shift and go to state 106


state 89

    (34) Expr -> * ( Expr . VIRG Expr )

    VIRG            shift and go to state 107


state 90

    (35) Expr -> / ( Expr . VIRG Expr )

    VIRG            shift and go to state 108


state 91

    (36) Expr -> % ( Expr . VIRG Expr )

    VIRG            shift and go to state 109


state 92

    (39) Cond -> MAIOR ( Expr . VIRG Expr )

    VIRG            shift and go to state 110


state 93

    (40) Cond -> MENOR ( Expr . VIRG Expr )

    VIRG            shift and go to state 111


state 94

    (41) Cond -> MAIORI ( Expr . VIRG Expr )

    VIRG            shift and go to state 112


state 95

    (42) Cond -> MENORI ( Expr . VIRG Expr )

    VIRG            shift and go to state 113


state 96

    (43) Cond -> IGUAL ( Expr . VIRG Expr )

    VIRG            shift and go to state 114


state 97

    (44) Cond -> NIGUAL ( Expr . VIRG Expr )

    VIRG            shift and go to state 115


state 98

    (45) Cond -> E ( Cond . VIRG Cond )

    VIRG            shift and go to state 116


state 99

    (46) Cond -> OU ( Cond . VIRG Cond )

    VIRG            shift and go to state 117


state 100

    (47) Cond -> NEG ( Cond . )

    )               shift and go to state 118


state 101

    (22) Se -> SE Cond ENTAO Corpo . FIM
    (23) Se -> SE Cond ENTAO Corpo . SENAO Corpo FIM
    (14) Corpo -> Corpo . Ope
    (15) Ope -> . Atrib
    (16) Ope -> . Escrever
    (17) Ope -> . Se
    (18) Ope -> . Enquanto
    (19) Ope -> . PRINT ( Frase )
    (25) Atrib -> . NOME ATR Expr
    (26) Atrib -> . NOME ATR LER
    (27) Escrever -> . ESCREVER Expr
    (22) Se -> . SE Cond ENTAO Corpo FIM
    (23) Se -> . SE Cond ENTAO Corpo SENAO Corpo FIM
    (24) Enquanto -> . ENQUANTO Cond FAZ Corpo FIM

    FIM             shift and go to state 119
    SENAO           shift and go to state 120
    PRINT           shift and go to state 10
    NOME            shift and go to state 18
    ESCREVER        shift and go to state 14
    SE              shift and go to state 15
    ENQUANTO        shift and go to state 16

    Ope                            shift and go to state 17
    Atrib                          shift and go to state 6
    Escrever                       shift and go to state 7
    Se                             shift and go to state 8
    Enquanto                       shift and go to state 9

state 102

    (24) Enquanto -> ENQUANTO Cond FAZ Corpo . FIM
    (14) Corpo -> Corpo . Ope
    (15) Ope -> . Atrib
    (16) Ope -> . Escrever
    (17) Ope -> . Se
    (18) Ope -> . Enquanto
    (19) Ope -> . PRINT ( Frase )
    (25) Atrib -> . NOME ATR Expr
    (26) Atrib -> . NOME ATR LER
    (27) Escrever -> . ESCREVER Expr
    (22) Se -> . SE Cond ENTAO Corpo FIM
    (23) Se -> . SE Cond ENTAO Corpo SENAO Corpo FIM
    (24) Enquanto -> . ENQUANTO Cond FAZ Corpo FIM

    FIM             shift and go to state 121
    PRINT           shift and go to state 10
    NOME            shift and go to state 18
    ESCREVER        shift and go to state 14
    SE              shift and go to state 15
    ENQUANTO        shift and go to state 16

    Ope                            shift and go to state 17
    Atrib                          shift and go to state 6
    Escrever                       shift and go to state 7
    Se                             shift and go to state 8
    Enquanto                       shift and go to state 9

state 103

    (9) Decl -> Fundecl DEFINE NOME Programa RETURN . NOME )
    (10) Decl -> Fundecl DEFINE NOME Programa RETURN . NUMERO )

    NOME            shift and go to state 122
    NUMERO          shift and go to state 123


state 104

    (11) Decl -> Fundecl DEFINE NOME RETURN NUMERO . )

    )               shift and go to state 124


state 105

    (32) Expr -> + ( Expr VIRG . Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 125
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 106

    (33) Expr -> - ( Expr VIRG . Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 126
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 107

    (34) Expr -> * ( Expr VIRG . Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 127
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 108

    (35) Expr -> / ( Expr VIRG . Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 128
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 109

    (36) Expr -> % ( Expr VIRG . Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 129
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 110

    (39) Cond -> MAIOR ( Expr VIRG . Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 130
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 111

    (40) Cond -> MENOR ( Expr VIRG . Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 131
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 112

    (41) Cond -> MAIORI ( Expr VIRG . Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 132
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 113

    (42) Cond -> MENORI ( Expr VIRG . Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 133
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 114

    (43) Cond -> IGUAL ( Expr VIRG . Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 134
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 115

    (44) Cond -> NIGUAL ( Expr VIRG . Expr )
    (28) Expr -> . ( Expr )
    (29) Expr -> . NOME ( )
    (30) Expr -> . Var
    (31) Expr -> . NUMERO
    (32) Expr -> . + ( Expr VIRG Expr )
    (33) Expr -> . - ( Expr VIRG Expr )
    (34) Expr -> . * ( Expr VIRG Expr )
    (35) Expr -> . / ( Expr VIRG Expr )
    (36) Expr -> . % ( Expr VIRG Expr )
    (37) Expr -> . Cond
    (48) Var -> . NOME
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 28
    NOME            shift and go to state 29
    NUMERO          shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    *               shift and go to state 34
    /               shift and go to state 35
    %               shift and go to state 36
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Expr                           shift and go to state 135
    Var                            shift and go to state 30
    Cond                           shift and go to state 37

state 116

    (45) Cond -> E ( Cond VIRG . Cond )
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 48
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Cond                           shift and go to state 136

state 117

    (46) Cond -> OU ( Cond VIRG . Cond )
    (38) Cond -> . ( Cond )
    (39) Cond -> . MAIOR ( Expr VIRG Expr )
    (40) Cond -> . MENOR ( Expr VIRG Expr )
    (41) Cond -> . MAIORI ( Expr VIRG Expr )
    (42) Cond -> . MENORI ( Expr VIRG Expr )
    (43) Cond -> . IGUAL ( Expr VIRG Expr )
    (44) Cond -> . NIGUAL ( Expr VIRG Expr )
    (45) Cond -> . E ( Cond VIRG Cond )
    (46) Cond -> . OU ( Cond VIRG Cond )
    (47) Cond -> . NEG ( Cond )

    (               shift and go to state 48
    MAIOR           shift and go to state 38
    MENOR           shift and go to state 39
    MAIORI          shift and go to state 40
    MENORI          shift and go to state 41
    IGUAL           shift and go to state 42
    NIGUAL          shift and go to state 43
    E               shift and go to state 44
    OU              shift and go to state 45
    NEG             shift and go to state 46

    Cond                           shift and go to state 137

state 118

    (47) Cond -> NEG ( Cond ) .

    PRINT           reduce using rule 47 (Cond -> NEG ( Cond ) .)
    NOME            reduce using rule 47 (Cond -> NEG ( Cond ) .)
    ESCREVER        reduce using rule 47 (Cond -> NEG ( Cond ) .)
    SE              reduce using rule 47 (Cond -> NEG ( Cond ) .)
    ENQUANTO        reduce using rule 47 (Cond -> NEG ( Cond ) .)
    $end            reduce using rule 47 (Cond -> NEG ( Cond ) .)
    RETURN          reduce using rule 47 (Cond -> NEG ( Cond ) .)
    FIM             reduce using rule 47 (Cond -> NEG ( Cond ) .)
    SENAO           reduce using rule 47 (Cond -> NEG ( Cond ) .)
    ENTAO           reduce using rule 47 (Cond -> NEG ( Cond ) .)
    FAZ             reduce using rule 47 (Cond -> NEG ( Cond ) .)
    )               reduce using rule 47 (Cond -> NEG ( Cond ) .)
    VIRG            reduce using rule 47 (Cond -> NEG ( Cond ) .)


state 119

    (22) Se -> SE Cond ENTAO Corpo FIM .

    PRINT           reduce using rule 22 (Se -> SE Cond ENTAO Corpo FIM .)
    NOME            reduce using rule 22 (Se -> SE Cond ENTAO Corpo FIM .)
    ESCREVER        reduce using rule 22 (Se -> SE Cond ENTAO Corpo FIM .)
    SE              reduce using rule 22 (Se -> SE Cond ENTAO Corpo FIM .)
    ENQUANTO        reduce using rule 22 (Se -> SE Cond ENTAO Corpo FIM .)
    $end            reduce using rule 22 (Se -> SE Cond ENTAO Corpo FIM .)
    RETURN          reduce using rule 22 (Se -> SE Cond ENTAO Corpo FIM .)
    FIM             reduce using rule 22 (Se -> SE Cond ENTAO Corpo FIM .)
    SENAO           reduce using rule 22 (Se -> SE Cond ENTAO Corpo FIM .)


state 120

    (23) Se -> SE Cond ENTAO Corpo SENAO . Corpo FIM
    (13) Corpo -> . Ope
    (14) Corpo -> . Corpo Ope
    (15) Ope -> . Atrib
    (16) Ope -> . Escrever
    (17) Ope -> . Se
    (18) Ope -> . Enquanto
    (19) Ope -> . PRINT ( Frase )
    (25) Atrib -> . NOME ATR Expr
    (26) Atrib -> . NOME ATR LER
    (27) Escrever -> . ESCREVER Expr
    (22) Se -> . SE Cond ENTAO Corpo FIM
    (23) Se -> . SE Cond ENTAO Corpo SENAO Corpo FIM
    (24) Enquanto -> . ENQUANTO Cond FAZ Corpo FIM

    PRINT           shift and go to state 10
    NOME            shift and go to state 18
    ESCREVER        shift and go to state 14
    SE              shift and go to state 15
    ENQUANTO        shift and go to state 16

    Corpo                          shift and go to state 138
    Ope                            shift and go to state 4
    Atrib                          shift and go to state 6
    Escrever                       shift and go to state 7
    Se                             shift and go to state 8
    Enquanto                       shift and go to state 9

state 121

    (24) Enquanto -> ENQUANTO Cond FAZ Corpo FIM .

    PRINT           reduce using rule 24 (Enquanto -> ENQUANTO Cond FAZ Corpo FIM .)
    NOME            reduce using rule 24 (Enquanto -> ENQUANTO Cond FAZ Corpo FIM .)
    ESCREVER        reduce using rule 24 (Enquanto -> ENQUANTO Cond FAZ Corpo FIM .)
    SE              reduce using rule 24 (Enquanto -> ENQUANTO Cond FAZ Corpo FIM .)
    ENQUANTO        reduce using rule 24 (Enquanto -> ENQUANTO Cond FAZ Corpo FIM .)
    $end            reduce using rule 24 (Enquanto -> ENQUANTO Cond FAZ Corpo FIM .)
    RETURN          reduce using rule 24 (Enquanto -> ENQUANTO Cond FAZ Corpo FIM .)
    FIM             reduce using rule 24 (Enquanto -> ENQUANTO Cond FAZ Corpo FIM .)
    SENAO           reduce using rule 24 (Enquanto -> ENQUANTO Cond FAZ Corpo FIM .)


state 122

    (9) Decl -> Fundecl DEFINE NOME Programa RETURN NOME . )

    )               shift and go to state 139


state 123

    (10) Decl -> Fundecl DEFINE NOME Programa RETURN NUMERO . )

    )               shift and go to state 140


state 124

    (11) Decl -> Fundecl DEFINE NOME RETURN NUMERO ) .

    INT             reduce using rule 11 (Decl -> Fundecl DEFINE NOME RETURN NUMERO ) .)
    PRINT           reduce using rule 11 (Decl -> Fundecl DEFINE NOME RETURN NUMERO ) .)
    NOME            reduce using rule 11 (Decl -> Fundecl DEFINE NOME RETURN NUMERO ) .)
    ESCREVER        reduce using rule 11 (Decl -> Fundecl DEFINE NOME RETURN NUMERO ) .)
    SE              reduce using rule 11 (Decl -> Fundecl DEFINE NOME RETURN NUMERO ) .)
    ENQUANTO        reduce using rule 11 (Decl -> Fundecl DEFINE NOME RETURN NUMERO ) .)
    $end            reduce using rule 11 (Decl -> Fundecl DEFINE NOME RETURN NUMERO ) .)
    RETURN          reduce using rule 11 (Decl -> Fundecl DEFINE NOME RETURN NUMERO ) .)


state 125

    (32) Expr -> + ( Expr VIRG Expr . )

    )               shift and go to state 141


state 126

    (33) Expr -> - ( Expr VIRG Expr . )

    )               shift and go to state 142


state 127

    (34) Expr -> * ( Expr VIRG Expr . )

    )               shift and go to state 143


state 128

    (35) Expr -> / ( Expr VIRG Expr . )

    )               shift and go to state 144


state 129

    (36) Expr -> % ( Expr VIRG Expr . )

    )               shift and go to state 145


state 130

    (39) Cond -> MAIOR ( Expr VIRG Expr . )

    )               shift and go to state 146


state 131

    (40) Cond -> MENOR ( Expr VIRG Expr . )

    )               shift and go to state 147


state 132

    (41) Cond -> MAIORI ( Expr VIRG Expr . )

    )               shift and go to state 148


state 133

    (42) Cond -> MENORI ( Expr VIRG Expr . )

    )               shift and go to state 149


state 134

    (43) Cond -> IGUAL ( Expr VIRG Expr . )

    )               shift and go to state 150


state 135

    (44) Cond -> NIGUAL ( Expr VIRG Expr . )

    )               shift and go to state 151


state 136

    (45) Cond -> E ( Cond VIRG Cond . )

    )               shift and go to state 152


state 137

    (46) Cond -> OU ( Cond VIRG Cond . )

    )               shift and go to state 153


state 138

    (23) Se -> SE Cond ENTAO Corpo SENAO Corpo . FIM
    (14) Corpo -> Corpo . Ope
    (15) Ope -> . Atrib
    (16) Ope -> . Escrever
    (17) Ope -> . Se
    (18) Ope -> . Enquanto
    (19) Ope -> . PRINT ( Frase )
    (25) Atrib -> . NOME ATR Expr
    (26) Atrib -> . NOME ATR LER
    (27) Escrever -> . ESCREVER Expr
    (22) Se -> . SE Cond ENTAO Corpo FIM
    (23) Se -> . SE Cond ENTAO Corpo SENAO Corpo FIM
    (24) Enquanto -> . ENQUANTO Cond FAZ Corpo FIM

    FIM             shift and go to state 154
    PRINT           shift and go to state 10
    NOME            shift and go to state 18
    ESCREVER        shift and go to state 14
    SE              shift and go to state 15
    ENQUANTO        shift and go to state 16

    Ope                            shift and go to state 17
    Atrib                          shift and go to state 6
    Escrever                       shift and go to state 7
    Se                             shift and go to state 8
    Enquanto                       shift and go to state 9

state 139

    (9) Decl -> Fundecl DEFINE NOME Programa RETURN NOME ) .

    INT             reduce using rule 9 (Decl -> Fundecl DEFINE NOME Programa RETURN NOME ) .)
    PRINT           reduce using rule 9 (Decl -> Fundecl DEFINE NOME Programa RETURN NOME ) .)
    NOME            reduce using rule 9 (Decl -> Fundecl DEFINE NOME Programa RETURN NOME ) .)
    ESCREVER        reduce using rule 9 (Decl -> Fundecl DEFINE NOME Programa RETURN NOME ) .)
    SE              reduce using rule 9 (Decl -> Fundecl DEFINE NOME Programa RETURN NOME ) .)
    ENQUANTO        reduce using rule 9 (Decl -> Fundecl DEFINE NOME Programa RETURN NOME ) .)
    $end            reduce using rule 9 (Decl -> Fundecl DEFINE NOME Programa RETURN NOME ) .)
    RETURN          reduce using rule 9 (Decl -> Fundecl DEFINE NOME Programa RETURN NOME ) .)


state 140

    (10) Decl -> Fundecl DEFINE NOME Programa RETURN NUMERO ) .

    INT             reduce using rule 10 (Decl -> Fundecl DEFINE NOME Programa RETURN NUMERO ) .)
    PRINT           reduce using rule 10 (Decl -> Fundecl DEFINE NOME Programa RETURN NUMERO ) .)
    NOME            reduce using rule 10 (Decl -> Fundecl DEFINE NOME Programa RETURN NUMERO ) .)
    ESCREVER        reduce using rule 10 (Decl -> Fundecl DEFINE NOME Programa RETURN NUMERO ) .)
    SE              reduce using rule 10 (Decl -> Fundecl DEFINE NOME Programa RETURN NUMERO ) .)
    ENQUANTO        reduce using rule 10 (Decl -> Fundecl DEFINE NOME Programa RETURN NUMERO ) .)
    $end            reduce using rule 10 (Decl -> Fundecl DEFINE NOME Programa RETURN NUMERO ) .)
    RETURN          reduce using rule 10 (Decl -> Fundecl DEFINE NOME Programa RETURN NUMERO ) .)


state 141

    (32) Expr -> + ( Expr VIRG Expr ) .

    PRINT           reduce using rule 32 (Expr -> + ( Expr VIRG Expr ) .)
    NOME            reduce using rule 32 (Expr -> + ( Expr VIRG Expr ) .)
    ESCREVER        reduce using rule 32 (Expr -> + ( Expr VIRG Expr ) .)
    SE              reduce using rule 32 (Expr -> + ( Expr VIRG Expr ) .)
    ENQUANTO        reduce using rule 32 (Expr -> + ( Expr VIRG Expr ) .)
    $end            reduce using rule 32 (Expr -> + ( Expr VIRG Expr ) .)
    RETURN          reduce using rule 32 (Expr -> + ( Expr VIRG Expr ) .)
    FIM             reduce using rule 32 (Expr -> + ( Expr VIRG Expr ) .)
    SENAO           reduce using rule 32 (Expr -> + ( Expr VIRG Expr ) .)
    )               reduce using rule 32 (Expr -> + ( Expr VIRG Expr ) .)
    VIRG            reduce using rule 32 (Expr -> + ( Expr VIRG Expr ) .)


state 142

    (33) Expr -> - ( Expr VIRG Expr ) .

    PRINT           reduce using rule 33 (Expr -> - ( Expr VIRG Expr ) .)
    NOME            reduce using rule 33 (Expr -> - ( Expr VIRG Expr ) .)
    ESCREVER        reduce using rule 33 (Expr -> - ( Expr VIRG Expr ) .)
    SE              reduce using rule 33 (Expr -> - ( Expr VIRG Expr ) .)
    ENQUANTO        reduce using rule 33 (Expr -> - ( Expr VIRG Expr ) .)
    $end            reduce using rule 33 (Expr -> - ( Expr VIRG Expr ) .)
    RETURN          reduce using rule 33 (Expr -> - ( Expr VIRG Expr ) .)
    FIM             reduce using rule 33 (Expr -> - ( Expr VIRG Expr ) .)
    SENAO           reduce using rule 33 (Expr -> - ( Expr VIRG Expr ) .)
    )               reduce using rule 33 (Expr -> - ( Expr VIRG Expr ) .)
    VIRG            reduce using rule 33 (Expr -> - ( Expr VIRG Expr ) .)


state 143

    (34) Expr -> * ( Expr VIRG Expr ) .

    PRINT           reduce using rule 34 (Expr -> * ( Expr VIRG Expr ) .)
    NOME            reduce using rule 34 (Expr -> * ( Expr VIRG Expr ) .)
    ESCREVER        reduce using rule 34 (Expr -> * ( Expr VIRG Expr ) .)
    SE              reduce using rule 34 (Expr -> * ( Expr VIRG Expr ) .)
    ENQUANTO        reduce using rule 34 (Expr -> * ( Expr VIRG Expr ) .)
    $end            reduce using rule 34 (Expr -> * ( Expr VIRG Expr ) .)
    RETURN          reduce using rule 34 (Expr -> * ( Expr VIRG Expr ) .)
    FIM             reduce using rule 34 (Expr -> * ( Expr VIRG Expr ) .)
    SENAO           reduce using rule 34 (Expr -> * ( Expr VIRG Expr ) .)
    )               reduce using rule 34 (Expr -> * ( Expr VIRG Expr ) .)
    VIRG            reduce using rule 34 (Expr -> * ( Expr VIRG Expr ) .)


state 144

    (35) Expr -> / ( Expr VIRG Expr ) .

    PRINT           reduce using rule 35 (Expr -> / ( Expr VIRG Expr ) .)
    NOME            reduce using rule 35 (Expr -> / ( Expr VIRG Expr ) .)
    ESCREVER        reduce using rule 35 (Expr -> / ( Expr VIRG Expr ) .)
    SE              reduce using rule 35 (Expr -> / ( Expr VIRG Expr ) .)
    ENQUANTO        reduce using rule 35 (Expr -> / ( Expr VIRG Expr ) .)
    $end            reduce using rule 35 (Expr -> / ( Expr VIRG Expr ) .)
    RETURN          reduce using rule 35 (Expr -> / ( Expr VIRG Expr ) .)
    FIM             reduce using rule 35 (Expr -> / ( Expr VIRG Expr ) .)
    SENAO           reduce using rule 35 (Expr -> / ( Expr VIRG Expr ) .)
    )               reduce using rule 35 (Expr -> / ( Expr VIRG Expr ) .)
    VIRG            reduce using rule 35 (Expr -> / ( Expr VIRG Expr ) .)


state 145

    (36) Expr -> % ( Expr VIRG Expr ) .

    PRINT           reduce using rule 36 (Expr -> % ( Expr VIRG Expr ) .)
    NOME            reduce using rule 36 (Expr -> % ( Expr VIRG Expr ) .)
    ESCREVER        reduce using rule 36 (Expr -> % ( Expr VIRG Expr ) .)
    SE              reduce using rule 36 (Expr -> % ( Expr VIRG Expr ) .)
    ENQUANTO        reduce using rule 36 (Expr -> % ( Expr VIRG Expr ) .)
    $end            reduce using rule 36 (Expr -> % ( Expr VIRG Expr ) .)
    RETURN          reduce using rule 36 (Expr -> % ( Expr VIRG Expr ) .)
    FIM             reduce using rule 36 (Expr -> % ( Expr VIRG Expr ) .)
    SENAO           reduce using rule 36 (Expr -> % ( Expr VIRG Expr ) .)
    )               reduce using rule 36 (Expr -> % ( Expr VIRG Expr ) .)
    VIRG            reduce using rule 36 (Expr -> % ( Expr VIRG Expr ) .)


state 146

    (39) Cond -> MAIOR ( Expr VIRG Expr ) .

    PRINT           reduce using rule 39 (Cond -> MAIOR ( Expr VIRG Expr ) .)
    NOME            reduce using rule 39 (Cond -> MAIOR ( Expr VIRG Expr ) .)
    ESCREVER        reduce using rule 39 (Cond -> MAIOR ( Expr VIRG Expr ) .)
    SE              reduce using rule 39 (Cond -> MAIOR ( Expr VIRG Expr ) .)
    ENQUANTO        reduce using rule 39 (Cond -> MAIOR ( Expr VIRG Expr ) .)
    $end            reduce using rule 39 (Cond -> MAIOR ( Expr VIRG Expr ) .)
    RETURN          reduce using rule 39 (Cond -> MAIOR ( Expr VIRG Expr ) .)
    FIM             reduce using rule 39 (Cond -> MAIOR ( Expr VIRG Expr ) .)
    SENAO           reduce using rule 39 (Cond -> MAIOR ( Expr VIRG Expr ) .)
    ENTAO           reduce using rule 39 (Cond -> MAIOR ( Expr VIRG Expr ) .)
    FAZ             reduce using rule 39 (Cond -> MAIOR ( Expr VIRG Expr ) .)
    )               reduce using rule 39 (Cond -> MAIOR ( Expr VIRG Expr ) .)
    VIRG            reduce using rule 39 (Cond -> MAIOR ( Expr VIRG Expr ) .)


state 147

    (40) Cond -> MENOR ( Expr VIRG Expr ) .

    PRINT           reduce using rule 40 (Cond -> MENOR ( Expr VIRG Expr ) .)
    NOME            reduce using rule 40 (Cond -> MENOR ( Expr VIRG Expr ) .)
    ESCREVER        reduce using rule 40 (Cond -> MENOR ( Expr VIRG Expr ) .)
    SE              reduce using rule 40 (Cond -> MENOR ( Expr VIRG Expr ) .)
    ENQUANTO        reduce using rule 40 (Cond -> MENOR ( Expr VIRG Expr ) .)
    $end            reduce using rule 40 (Cond -> MENOR ( Expr VIRG Expr ) .)
    RETURN          reduce using rule 40 (Cond -> MENOR ( Expr VIRG Expr ) .)
    FIM             reduce using rule 40 (Cond -> MENOR ( Expr VIRG Expr ) .)
    SENAO           reduce using rule 40 (Cond -> MENOR ( Expr VIRG Expr ) .)
    ENTAO           reduce using rule 40 (Cond -> MENOR ( Expr VIRG Expr ) .)
    FAZ             reduce using rule 40 (Cond -> MENOR ( Expr VIRG Expr ) .)
    )               reduce using rule 40 (Cond -> MENOR ( Expr VIRG Expr ) .)
    VIRG            reduce using rule 40 (Cond -> MENOR ( Expr VIRG Expr ) .)


state 148

    (41) Cond -> MAIORI ( Expr VIRG Expr ) .

    PRINT           reduce using rule 41 (Cond -> MAIORI ( Expr VIRG Expr ) .)
    NOME            reduce using rule 41 (Cond -> MAIORI ( Expr VIRG Expr ) .)
    ESCREVER        reduce using rule 41 (Cond -> MAIORI ( Expr VIRG Expr ) .)
    SE              reduce using rule 41 (Cond -> MAIORI ( Expr VIRG Expr ) .)
    ENQUANTO        reduce using rule 41 (Cond -> MAIORI ( Expr VIRG Expr ) .)
    $end            reduce using rule 41 (Cond -> MAIORI ( Expr VIRG Expr ) .)
    RETURN          reduce using rule 41 (Cond -> MAIORI ( Expr VIRG Expr ) .)
    FIM             reduce using rule 41 (Cond -> MAIORI ( Expr VIRG Expr ) .)
    SENAO           reduce using rule 41 (Cond -> MAIORI ( Expr VIRG Expr ) .)
    ENTAO           reduce using rule 41 (Cond -> MAIORI ( Expr VIRG Expr ) .)
    FAZ             reduce using rule 41 (Cond -> MAIORI ( Expr VIRG Expr ) .)
    )               reduce using rule 41 (Cond -> MAIORI ( Expr VIRG Expr ) .)
    VIRG            reduce using rule 41 (Cond -> MAIORI ( Expr VIRG Expr ) .)


state 149

    (42) Cond -> MENORI ( Expr VIRG Expr ) .

    PRINT           reduce using rule 42 (Cond -> MENORI ( Expr VIRG Expr ) .)
    NOME            reduce using rule 42 (Cond -> MENORI ( Expr VIRG Expr ) .)
    ESCREVER        reduce using rule 42 (Cond -> MENORI ( Expr VIRG Expr ) .)
    SE              reduce using rule 42 (Cond -> MENORI ( Expr VIRG Expr ) .)
    ENQUANTO        reduce using rule 42 (Cond -> MENORI ( Expr VIRG Expr ) .)
    $end            reduce using rule 42 (Cond -> MENORI ( Expr VIRG Expr ) .)
    RETURN          reduce using rule 42 (Cond -> MENORI ( Expr VIRG Expr ) .)
    FIM             reduce using rule 42 (Cond -> MENORI ( Expr VIRG Expr ) .)
    SENAO           reduce using rule 42 (Cond -> MENORI ( Expr VIRG Expr ) .)
    ENTAO           reduce using rule 42 (Cond -> MENORI ( Expr VIRG Expr ) .)
    FAZ             reduce using rule 42 (Cond -> MENORI ( Expr VIRG Expr ) .)
    )               reduce using rule 42 (Cond -> MENORI ( Expr VIRG Expr ) .)
    VIRG            reduce using rule 42 (Cond -> MENORI ( Expr VIRG Expr ) .)


state 150

    (43) Cond -> IGUAL ( Expr VIRG Expr ) .

    PRINT           reduce using rule 43 (Cond -> IGUAL ( Expr VIRG Expr ) .)
    NOME            reduce using rule 43 (Cond -> IGUAL ( Expr VIRG Expr ) .)
    ESCREVER        reduce using rule 43 (Cond -> IGUAL ( Expr VIRG Expr ) .)
    SE              reduce using rule 43 (Cond -> IGUAL ( Expr VIRG Expr ) .)
    ENQUANTO        reduce using rule 43 (Cond -> IGUAL ( Expr VIRG Expr ) .)
    $end            reduce using rule 43 (Cond -> IGUAL ( Expr VIRG Expr ) .)
    RETURN          reduce using rule 43 (Cond -> IGUAL ( Expr VIRG Expr ) .)
    FIM             reduce using rule 43 (Cond -> IGUAL ( Expr VIRG Expr ) .)
    SENAO           reduce using rule 43 (Cond -> IGUAL ( Expr VIRG Expr ) .)
    ENTAO           reduce using rule 43 (Cond -> IGUAL ( Expr VIRG Expr ) .)
    FAZ             reduce using rule 43 (Cond -> IGUAL ( Expr VIRG Expr ) .)
    )               reduce using rule 43 (Cond -> IGUAL ( Expr VIRG Expr ) .)
    VIRG            reduce using rule 43 (Cond -> IGUAL ( Expr VIRG Expr ) .)


state 151

    (44) Cond -> NIGUAL ( Expr VIRG Expr ) .

    PRINT           reduce using rule 44 (Cond -> NIGUAL ( Expr VIRG Expr ) .)
    NOME            reduce using rule 44 (Cond -> NIGUAL ( Expr VIRG Expr ) .)
    ESCREVER        reduce using rule 44 (Cond -> NIGUAL ( Expr VIRG Expr ) .)
    SE              reduce using rule 44 (Cond -> NIGUAL ( Expr VIRG Expr ) .)
    ENQUANTO        reduce using rule 44 (Cond -> NIGUAL ( Expr VIRG Expr ) .)
    $end            reduce using rule 44 (Cond -> NIGUAL ( Expr VIRG Expr ) .)
    RETURN          reduce using rule 44 (Cond -> NIGUAL ( Expr VIRG Expr ) .)
    FIM             reduce using rule 44 (Cond -> NIGUAL ( Expr VIRG Expr ) .)
    SENAO           reduce using rule 44 (Cond -> NIGUAL ( Expr VIRG Expr ) .)
    ENTAO           reduce using rule 44 (Cond -> NIGUAL ( Expr VIRG Expr ) .)
    FAZ             reduce using rule 44 (Cond -> NIGUAL ( Expr VIRG Expr ) .)
    )               reduce using rule 44 (Cond -> NIGUAL ( Expr VIRG Expr ) .)
    VIRG            reduce using rule 44 (Cond -> NIGUAL ( Expr VIRG Expr ) .)


state 152

    (45) Cond -> E ( Cond VIRG Cond ) .

    PRINT           reduce using rule 45 (Cond -> E ( Cond VIRG Cond ) .)
    NOME            reduce using rule 45 (Cond -> E ( Cond VIRG Cond ) .)
    ESCREVER        reduce using rule 45 (Cond -> E ( Cond VIRG Cond ) .)
    SE              reduce using rule 45 (Cond -> E ( Cond VIRG Cond ) .)
    ENQUANTO        reduce using rule 45 (Cond -> E ( Cond VIRG Cond ) .)
    $end            reduce using rule 45 (Cond -> E ( Cond VIRG Cond ) .)
    RETURN          reduce using rule 45 (Cond -> E ( Cond VIRG Cond ) .)
    FIM             reduce using rule 45 (Cond -> E ( Cond VIRG Cond ) .)
    SENAO           reduce using rule 45 (Cond -> E ( Cond VIRG Cond ) .)
    ENTAO           reduce using rule 45 (Cond -> E ( Cond VIRG Cond ) .)
    FAZ             reduce using rule 45 (Cond -> E ( Cond VIRG Cond ) .)
    )               reduce using rule 45 (Cond -> E ( Cond VIRG Cond ) .)
    VIRG            reduce using rule 45 (Cond -> E ( Cond VIRG Cond ) .)


state 153

    (46) Cond -> OU ( Cond VIRG Cond ) .

    PRINT           reduce using rule 46 (Cond -> OU ( Cond VIRG Cond ) .)
    NOME            reduce using rule 46 (Cond -> OU ( Cond VIRG Cond ) .)
    ESCREVER        reduce using rule 46 (Cond -> OU ( Cond VIRG Cond ) .)
    SE              reduce using rule 46 (Cond -> OU ( Cond VIRG Cond ) .)
    ENQUANTO        reduce using rule 46 (Cond -> OU ( Cond VIRG Cond ) .)
    $end            reduce using rule 46 (Cond -> OU ( Cond VIRG Cond ) .)
    RETURN          reduce using rule 46 (Cond -> OU ( Cond VIRG Cond ) .)
    FIM             reduce using rule 46 (Cond -> OU ( Cond VIRG Cond ) .)
    SENAO           reduce using rule 46 (Cond -> OU ( Cond VIRG Cond ) .)
    ENTAO           reduce using rule 46 (Cond -> OU ( Cond VIRG Cond ) .)
    FAZ             reduce using rule 46 (Cond -> OU ( Cond VIRG Cond ) .)
    )               reduce using rule 46 (Cond -> OU ( Cond VIRG Cond ) .)
    VIRG            reduce using rule 46 (Cond -> OU ( Cond VIRG Cond ) .)


state 154

    (23) Se -> SE Cond ENTAO Corpo SENAO Corpo FIM .

    PRINT           reduce using rule 23 (Se -> SE Cond ENTAO Corpo SENAO Corpo FIM .)
    NOME            reduce using rule 23 (Se -> SE Cond ENTAO Corpo SENAO Corpo FIM .)
    ESCREVER        reduce using rule 23 (Se -> SE Cond ENTAO Corpo SENAO Corpo FIM .)
    SE              reduce using rule 23 (Se -> SE Cond ENTAO Corpo SENAO Corpo FIM .)
    ENQUANTO        reduce using rule 23 (Se -> SE Cond ENTAO Corpo SENAO Corpo FIM .)
    $end            reduce using rule 23 (Se -> SE Cond ENTAO Corpo SENAO Corpo FIM .)
    RETURN          reduce using rule 23 (Se -> SE Cond ENTAO Corpo SENAO Corpo FIM .)
    FIM             reduce using rule 23 (Se -> SE Cond ENTAO Corpo SENAO Corpo FIM .)
    SENAO           reduce using rule 23 (Se -> SE Cond ENTAO Corpo SENAO Corpo FIM .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ) in state 58 resolved as shift
